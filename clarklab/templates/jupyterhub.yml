#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: {{ .Values.jupyterhub.volume.pvcName | quote }}
#  namespace: {{ .Values.namespace }}
#  labels:
#    app: {{ .Values.jupyterhub.appName }}
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: {{ .Values.jupyterhub.volume.storage }}
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterhub-deployment
  namespace: clarklab
  labels:
    app: jupyterhub
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: {{ .Values.jupyterhub.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.jupyterhub.appName }}
    spec:
      securityContext:
        runAsUser: 1000 
        runAsGroup: 100
        fsGroup: 100
        #allowPrivilegeEscalation: true
#      volumes:
#      - name: {{ .Values.jupyterhub.volume.name }}
#        persistentVolumeClaim:
#          claimName: {{ .Values.jupyterhub.volume.pvcName }}
      containers:
      - name: jupyterhub
        image: {{ .Values.jupyterhub.image }}
        command: 
        - "start-notebook.sh"
        - "--ServerApp.ip='*'"
        - "--ServerApp.allow_remote_access=True"
        - "--ServerApp.port=8888"
        - "--ServerApp.open_browser=False"
        - "--NotebookApp.allow_origin='https://jupyterhub.fairscape.pods.uvarc.io'"
#        volumeMounts:
#        - mountPath: "/home/jovyan/work"
#          name: {{ .Values.jupyterhub.volume.name }}
        ports:
        - name: http
          containerPort: 8888
        env:
        - name: "FAIRSCAPE_MONGO_PROD_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongo.prod.username.secretName | quote }}
              key: {{ .Values.mongo.prod.username.secretKey | quote }}
        - name: "FAIRSCAPE_MONGO_PROD_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongo.prod.password.secretName | quote }}
              key: {{ .Values.mongo.prod.password.secretKey | quote }}
        - name: "FAIRSCAPE_MONGO_TEST_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongo.test.username.secretName | quote }}
              key: {{ .Values.mongo.test.username.secretKey | quote }}
        - name: "FAIRSCAPE_MONGO_TEST_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongo.test.password.secretName | quote }}
              key: {{ .Values.mongo.test.password.secretKey | quote }}
        - name: "FAIRSCAPE_MINIO_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.minio.accessKey.secretName | quote }}
              key: {{ .Values.minio.accessKey.secretKey | quote }}
        - name: "FAIRSCAPE_MINIO_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.minio.secretKey.secretName | quote }}
              key: {{ .Values.minio.secretKey.secretKey | quote }}
        {{- range $envVar := .Values.fairscapeConfig.env}}
        - name: {{ $envVar.name | quote }}
          value: {{ $envVar.value | quote }}
        {{- end }}
        # allow jovyan to sudo
        - name: GRANT_SUDO
          value: "yes" 
        resources:
          requests:
            memory: {{ .Values.jupyterhub.requests.memory | quote }}
            cpu: {{ .Values.jupyterhub.requests.cpu | quote }}
          limits:
            memory: {{ .Values.jupyterhub.limits.memory | quote }}
            cpu: {{ .Values.jupyterhub.limits.cpu | quote }}
      serviceAccountName: fairscape-sa 
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.jupyterhub.serviceName }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.jupyterhub.appName }}
spec:
  selector:
    app: {{ .Values.jupyterhub.appName }}
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8888
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jupyterhub-fairscape-ingress
  namespace: clarklab
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    acme.cert-manager.io/http01-edit-in-place: "true"
# annotations for jupyterhub websockets
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.org/websocket-services: {{ .Values.jupyterhub.serviceName }}
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
spec:
  rules:
    - host: jupyterhub.fairscape.pods.uvarc.io
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: {{ .Values.jupyterhub.serviceName }}
                port:
                  number: 80 
    # This section is only required if TLS is to be enabled for the Ingress
  tls:
      - hosts:
          - jupyterhub.fairscape.pods.uvarc.io
        secretName: jupyterhub-fairscape-nginx-tls-ingress-secret
