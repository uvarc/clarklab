apiVersion: apps/v1
kind: Deployment
metadata:
  name: "test-{{ .Values.fairscape.backend.appName }}-deployment"
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: "test-{{ .Values.fairscape.backend.appName }}"
  template:
    metadata:
      labels:
        app: "test-{{ .Values.fairscape.backend.appName }}"
    spec:
      imagePullSecrets:
      - name: {{ .Values.fairscape.pullSecretName }}
      containers:
      - name: fairscape
        image: {{ .Values.fairscape.backend.testImage }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        {{- /*
        generate env variables from values configuration
        */}}
        - name: "FAIRSCAPE_JWT_SECRET"
          value: "testjwtsecret"
        - name: "FAIRSCAPE_ADMIN_GROUP"
          value: "admin"
        - name: "FAIRSCAPE_MONGO_DATABASE"
          value: {{ .Values.mongo.test.db }}
        - name: "FAIRSCAPE_MONGO_HOST"
          value: {{ .Values.mongo.hostURI | quote }}
        - name: "FAIRSCAPE_MONGO_PORT"
          value: {{ .Values.mongo.port | quote}}
        - name: "FAIRSCAPE_MONGO_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongo.test.username.secretName | quote }}
              key: {{ .Values.mongo.test.username.secretKey | quote }}
        - name: "FAIRSCAPE_MONGO_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongo.test.password.secretName | quote }}
              key: {{ .Values.mongo.test.password.secretKey | quote }}
        - name: "FAIRSCAPE_MINIO_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.fairscape.minio.test.secretName | quote }}
              key: "username"
        - name: "FAIRSCAPE_MINIO_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.fairscape.minio.test.secretName | quote }}
              key: "password"
        - name: "GEMINI_API_KEY"
          valueFrom:
            secretKeyRef:
              name: "gemini-secret"
              key: "api-token"
        - name: "FAIRSCAPE_MINIO_DEFAULT_BUCKET"
          value: {{ .Values.fairscape.minio.test.bucketName }}
        - name: "FAIRSCAPE_MINIO_URI"
          value: "http://incluster-minio:9000"
        - name: "FAIRSCAPE_REDIS_HOST"
          value: {{ .Values.redis.serviceName }}
        - name: "FAIRSCAPE_REDIS_PORT"
          value: {{ .Values.redis.servicePort | quote}}
        - name: "FAIRSCAPE_REDIS_JOB_DATABASE"
          value: {{ .Values.redis.test.jobDB | quote }}
        - name: "FAIRSCAPE_REDIS_RESULT_DATABASE"
          value: {{ .Values.redis.test.resultDB | quote }}
        - name: "FAIRSCAPE_BASE_URL"
          value: "https://test.fairscape.net/api"
        {{- range $envVar := .Values.fairscapeConfig.env}}
        - name: {{ $envVar.name }}
          value: {{ $envVar.value | quote }}
        {{- end }}
        resources:
          requests:
            memory: {{ .Values.fairscape.backend.requests.memory | quote }}
            cpu: {{ .Values.fairscape.backend.requests.cpu | quote }}
          limits:
            memory: {{ .Values.fairscape.backend.limits.memory | quote }}
            cpu: {{ .Values.fairscape.backend.limits.cpu | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: "test-{{ .Values.fairscape.backend.serviceName}}"
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: "test-{{ .Values.fairscape.backend.appName }}"
  ports:
    - name: http
      protocol: TCP
      port: {{ .Values.fairscape.backend.servicePort }}
      targetPort: {{ .Values.fairscape.backend.serviceTargetPort }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "test-{{ .Values.fairscape.worker.appName}}-deployment"
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.fairscape.worker.appName }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: "test-{{ .Values.fairscape.worker.appName}}"
  template:
    metadata:
      labels:
        app: "test-{{ .Values.fairscape.worker.appName}}"
    spec:
      imagePullSecrets:
      - name: {{ .Values.fairscape.pullSecretName }}
      securityContext:
        runAsUser: 1099
        runAsGroup: 1099
        fsGroup: 1099
      containers:
      - name: fairscape
        image: {{ .Values.fairscape.worker.testImage }}
        imagePullPolicy: Always
        command: ["python"]
        args: ["fairscape_mds/worker.py" ]
        env:
        {{- /*
        generate env variables from values configuration
        */}}
        - name: "FAIRSCAPE_JWT_SECRET"
          value: "testjwtsecret"
        - name: "FAIRSCAPE_ADMIN_GROUP"
          value: "admin"
        - name: "FAIRSCAPE_MONGO_DATABASE"
          value: {{ .Values.mongo.test.db }}
        - name: "FAIRSCAPE_MONGO_HOST"
          value: {{ .Values.mongo.hostURI | quote }}
        - name: "FAIRSCAPE_MONGO_PORT"
          value: {{ .Values.mongo.port | quote}}
        - name: "FAIRSCAPE_MONGO_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongo.test.username.secretName | quote }}
              key: {{ .Values.mongo.test.username.secretKey | quote }}
        - name: "FAIRSCAPE_MONGO_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongo.test.password.secretName | quote }}
              key: {{ .Values.mongo.test.password.secretKey | quote }}
        - name: "GEMINI_API_KEY"
          valueFrom:
            secretKeyRef:
              name: "gemini-secret"
              key: "api-token"
        - name: "FAIRSCAPE_MINIO_URI"
          value: "http://incluster-minio:9000"
        - name: "FAIRSCAPE_MINIO_ACCESS_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.fairscape.minio.test.secretName | quote }}
              key: "username"
        - name: "FAIRSCAPE_MINIO_SECRET_KEY"
          valueFrom:
            secretKeyRef:
              name: {{ .Values.fairscape.minio.test.secretName | quote }}
              key: "password"
        - name: "FAIRSCAPE_MINIO_DEFAULT_BUCKET"
          value: {{ .Values.fairscape.minio.test.bucketName }}
        - name: "FAIRSCAPE_REDIS_HOST"
          value: {{ .Values.redis.serviceName }}
        - name: "FAIRSCAPE_REDIS_PORT"
          value: {{ .Values.redis.servicePort | quote}}
        - name: "FAIRSCAPE_REDIS_JOB_DATABASE"
          value: {{ .Values.redis.test.jobDB | quote }}
        - name: "FAIRSCAPE_REDIS_RESULT_DATABASE"
          value: {{ .Values.redis.test.resultDB | quote }}
        - name: "FAIRSCAPE_BASE_URL"
          value: "https://test.fairscape.net/api"
        {{- range $envVar := .Values.fairscapeConfig.env}}
        - name: {{ $envVar.name }}
          value: {{ $envVar.value | quote}}
        {{- end }}
        resources:
          requests:
            memory: {{ .Values.fairscape.worker.requests.memory | quote }}
            cpu: {{ .Values.fairscape.worker.requests.cpu | quote }}
          limits:
            memory: {{ .Values.fairscape.worker.limits.memory | quote }}
            cpu: {{ .Values.fairscape.worker.limits.cpu | quote }}
      serviceAccountName: fairscape-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "test-{{ .Values.fairscape.frontend.appName }}-deployment"
  namespace: clarklab
  labels:
    app: "test-{{ .Values.fairscape.frontend.appName }}"
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: "test-{{ .Values.fairscape.frontend.appName }}"
  template:
    metadata:
      labels:
        app: "test-{{ .Values.fairscape.frontend.appName }}"
    spec:
      imagePullSecrets:
      - name: {{ .Values.fairscape.pullSecretName }}
      containers:
      - name: fairscape-frontend
        image: {{ .Values.fairscape.frontend.testImage }}
        env:
        - name: VITE_FAIRSCAPE_API_URL
          value: 'https://test.fairscape.net/api'
        - name: SEMANTIC_SEARCH_ENABLED
          value: 'true'
        ports:
        - containerPort: {{ .Values.fairscape.frontend.serviceTargetPort }}
        resources:
          requests:
            memory: {{ .Values.fairscape.frontend.requests.memory | quote }}
            cpu: {{ .Values.fairscape.frontend.requests.cpu | quote }}
          limits:
            memory: {{ .Values.fairscape.frontend.limits.memory | quote }}
            cpu: {{ .Values.fairscape.frontend.limits.cpu | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: "test-{{ .Values.fairscape.frontend.serviceName }}"
  namespace: clarklab
  labels:
    app: "test-{{ .Values.fairscape.frontend.appName }}"
spec:
  type: ClusterIP
  selector:
    app: "test-{{ .Values.fairscape.frontend.appName }}"
  ports:
    - name: http
      protocol: TCP
      port: {{ .Values.fairscape.frontend.servicePort }}
      targetPort: {{ .Values.fairscape.frontend.serviceTargetPort }}
